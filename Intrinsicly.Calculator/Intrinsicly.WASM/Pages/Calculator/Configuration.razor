@using Financial.Collection.Link.Blazor.WASM.Calculator.Encapsulation
@using Financial.Collection.Link.FinanceScraper.Encapsulation
@using Financial.Collection.Link.IntrinsicValue.Calculation.Encapsulator

<MudContainer Class="mt-6">
    <MudExpansionPanels>
        <MudExpansionPanel Dense="true" Icon="@Icons.Material.Filled.Settings">
            <TitleContent>
                <MudText Typo="Typo.subtitle1">Configuration</MudText>
            </TitleContent>
            <ChildContent>
                <MudStack Spacing="4">
                    <MudPaper Elevation="4" Class="pa-6">
                        <MudText Typo="Typo.body1">Calculation types</MudText>
                        <MudChipSet Class="mt-2" @bind-SelectedChips="calculationTypes" MultiSelection="true" Filter="true">
                            <MudChip id="executeGraham" Text="purple" Variant="Variant.Outlined" Color="Color.Primary">Benjamin Graham</MudChip>
                            <MudChip id="executeDCF" Text="purple" Variant="Variant.Outlined" Color="Color.Primary">Discounted Cash Flow</MudChip>
                        </MudChipSet>
                    </MudPaper>
                </MudStack>
                <MudStack Spacing="4" Class="mt-4 mb-4">
                    <MudPaper Elevation="4" Class="pa-6">
                        <MudText Typo="Typo.body1">Safety Margin</MudText>
                        <MudGrid>
                            <MudItem sm="6">
                                <MudNumericField Class="mt-3" @bind-Value="safetyMargin" Label="Safety Margin" Variant="Variant.Outlined" Step="5M" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Percent" HelperText="Percentage of intrinsic value to be displayed" HelperTextOnFocus="true" />
                            </MudItem>
                            <MudItem sm="6">
                                <MudCheckBox @bind-Value="@checkScrapeResult" Color="Color.Primary" Dense="true" Label="Check Data Before Calculation"></MudCheckBox>
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudStack>
            </ChildContent>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudContainer>

@code {
    public decimal? safetyMargin { get; set; }
    MudChip[] calculationTypes = Array.Empty<MudChip>();

    bool executeGraham = false;
    bool executeDCF = false;
    bool checkScrapeResult = false;

    public ParameterEncapsulator GatherConfigurationParameters(string ticker)
    {
        if (calculationTypes.Count() < 1)
            return new ParameterEncapsulator()
            {
                ScraperParameterEncapsulator = new ScraperParameterEncapsulator()
                {
                    Ticker = ticker
                }
            };

        MudChip grahamChipId = calculationTypes.FirstOrDefault(c => c.FieldId == nameof(executeGraham));
        if (grahamChipId is not null)
            if (grahamChipId.IsSelected)
                executeGraham = grahamChipId.IsSelected;

        MudChip dcfChipId = calculationTypes.FirstOrDefault(c => c.FieldId == nameof(executeDCF));
        if (dcfChipId is not null)
            if (dcfChipId.IsSelected)
                executeDCF = dcfChipId.IsSelected;

        if (safetyMargin == null)
            safetyMargin = 100;

        ScraperParameterEncapsulator scraperParameters = new ScraperParameterEncapsulator()
        {
            Ticker = ticker,
            ExecuteGrahamScrape = executeGraham,
            ExecuteDCFScrape = executeDCF,
            UseHtmlContent = true
        };

        CalculationParameterEncapsulator calculationParameters = new CalculationParameterEncapsulator()
        {
            ExecuteGrahamCalculation = executeGraham,
            ExecuteDCFCalculation = executeDCF,
            SafetyMargin = safetyMargin.Value
        };

        return new ParameterEncapsulator()
        {
            ScraperParameterEncapsulator = scraperParameters,
            CalculationParameterEncapsulator = calculationParameters,
            CheckScrapeResult = checkScrapeResult
        };
    }

    public void ResetConfig()
    {
        executeGraham = false;
        executeDCF = false;
        checkScrapeResult = false;
        calculationTypes = Array.Empty<MudChip>();
        safetyMargin = null;

        StateHasChanged();
    }
}
